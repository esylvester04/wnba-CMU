---
title: "Draft Smart: Identifying Hidden Value in WNBA Expansion"
author:
  - Ella Sylvester
  - Isabella Ferrandiz 		
  - Jada Douthit	
date: "July 25, 2025"
toc: true
format:
  html:
    theme: cosmo
    html-math-method: katex
    self-contained: true
execute:
  echo: false
  warning: false
  message: false
---

# Introduction 

In the WNBA, player salaries are governed by the league’s Collective Bargaining Agreement (CBA), which imposes strict financial constraints on team rosters. Each team must remain under a designated salary cap, and salary distributions often vary depending on a player’s experience. During an expansion draft, a new franchise can select one player from each existing team to build its roster. However, each team is allowed to “protect” a limited number of players from being drafted. With the current CBA set to expire at the end of this season, a significant number of players are entering 2026 as unrestricted free agents. Placing a constraint on expansion teams, as they are only allowed to select one unrestricted free agent that is not protected. Previous expansion draft rules allowed current teams to protect up to six players. With two teams coming into the 2026 WNBA Expansion Draft, we are making the assumption that current teams are going to be allowed to only protect 5 players.

Our main research question is: *How can we use player performance and salary data to optimize an expansion draft strategy in the WNBA?*


The goal of this project is to predict which players will be left unprotected by their current 2025 team and from this pool, quantify salary inefficiencies by comparing the player performance to their current compensation. Ultimately, we aim to recommend players who would be strategic targets for an expansion team seeking to maximize talent. However, there are some factors that front offices take into account that may not be publicly available when evaluating available players such as risks or inside intel.


# Data

For our research, we web scraped publically available data from three sites: salary data from Spotrac, stats from Her Hoop Stats, and historical data from Basketball-Reference.

We evaluated a dataset that consisted of 150–160 players for the 2023 to 2025 seasons. During the 2023 and 2024 season, there were only 12 teams to evaluate, with an additional expansion team added in the 2025 season. We looked at three main components for each player. First is the player demographics, which consist of their name, age, position, and team affiliation. Next, we looked at performance metrics, which include box score statistics (per-game stats) and advanced box score stats (such as player efficiency ratings). Lastly, we examined financial metrics, which include salary earnings, years remaining on the contract, and contract status. 
```{r}
#| echo: false
#| warning: false
#| results: 'hide'
library(dplyr)
library(janitor)
library(lubridate)
library(readr)
library(stringr)
library(stringi) 
library(tidyverse)
library(ggrepel)
library(scales)

# loading the data
model_df <- read_csv("salary_model_df.csv")
model_df_scaled <- read_csv("model_df_scaled.csv")
eda_df <- read_csv("eda_df.csv")
```

```{r}
#| echo: false
#| warning: false

library(dplyr)
library(gt)
library(stringr)

merged_df <- eda_df |>
  left_join(model_df |> select(player, actual), by = "player")

eda_players <- c(
  "caitlin clark", "a'ja wilson", "aliyah boston",
  "napheesa collier"
)

# Filter for star players and prepare table
star_table <- merged_df |>
  filter(player %in% eda_players) |>
  mutate(player = str_to_title(player)) |>
  select(
    player,
    Salary,
    per,
    pos = pos.x,
    team = team.x, 
    ts_percent, 
    e_fg_percent, 
    trb_percent
  )


star_table |>
  arrange(desc(Salary)) |>
  gt()  |>
  fmt_percent(columns = c(ts_percent, e_fg_percent, trb_percent), decimals = 1) |>
  cols_label(
    player = "Player",
    Salary = "Salary",
    pos = "Position",
    per = "PER",
    team = "Team", 
    ts_percent = "True Shooting %", 
    e_fg_percent = "Effective FG %", 
    trb_percent = "Total Rebounding %"
  )|>
  tab_caption("Table: Star players' salary and performance metrics.")

```

## Exploratory Data Analysis 

We were curious to explore the relationship between on-court production and salary in the WNBA. Specifically, we examined how player efficiency rating (PER) corresponds to 2025 salary across the league. Important salary benchmarks in the league include the rookie-scale, maximum, and supermax contracts; we aimed to uncover where mismatches occur, including efficient players on low-paying rookie deals or veterans earning near the salary cap despite middling production. Highlighting standout players further helped surface cases of potential undervaluation or overpayment.


```{r}
#| echo: false
#| warning: false
#| fig-cap: "This scatterplot shows player efficiency rating (PER) vs. salary for active players in the 2025 WNBA season."


#### PER / Salary EDA scatterplot: 
# Define the nine star players to highlight
star_players <- c(
  "caitlin clark", "arike ogunbowale", "a'ja wilson",
  "breanna stewart", "aliyah boston", "sabrina ionescu",
  "napheesa collier", "paige bueckers", "kelsey plum"
)

# Filter the data for labeling
star_df <- eda_df |> filter(player %in% star_players)

star_df <-star_df <- star_df |>
  mutate(
    nudge_x = case_when(
      player == "arike ogunbowale"  ~ -2,
      player == "paige bueckers"    ~ 10,
      player == "kelsey plum"       ~ -20,
      TRUE                         ~ 0
    ),
    nudge_y = case_when(
      player == "arike ogunbowale"  ~ -5,
      player == "sabrina ionescu"   ~ 10,
      player == "napheesa collier"  ~ -5,
      player == "paige bueckers"    ~ 30,
      player == "kelsey plum"       ~ 10,
      TRUE                         ~ 0
    )
  )

ggplot(eda_df, aes(x = per, 
                   y = salary_clean)) +
  #  rookie salary range
  annotate("rect",
           xmin = -Inf, xmax = Inf,
           ymin = 66000, ymax = 78000,
           fill = "red", alpha = 0.15) +
  geom_point(alpha = 0.7, size = 3, color = "#1f78b4") +
  geom_label_repel(
    data = star_df,
    aes(label = str_to_title(player)),
    size = 3,
    box.padding = 0.3,
    point.padding = 0.2,
    segment.color = "gray50",
    segment.size = 0.7,
    min.segment.length = 0,
    direction = "y",
    alpha = 0.7
  ) +
  # lines at key salary caps
  geom_hline(yintercept = 66000,  linetype = "dashed", color = "red", alpha = 0.5) +
  geom_hline(yintercept = 78000,  linetype = "dashed", color = "red", alpha = 0.5) +
  geom_hline(yintercept = 214000, linetype = "dashed", color = "green") +
  geom_hline(yintercept = 250000, linetype = "dashed", color = "blue") +

  # text labels
  annotate("text", x = 29, y = 72000,
           label = "Rookie Range", color = "red4",
           size = 3, hjust = 0) +
  annotate("text", x = 0, y = 216000 + 3000,
           label = "Max ($214K)", color = "darkgreen",
           size = 3, hjust = 0) +
  annotate("text", x = 0, y = 252000 + 3000,
           label = "Supermax ($249K)", color = "blue",
           size = 3, hjust = 0) +

  labs(
    title = "PER vs 2025 Salary",
    x = "Player Efficiency Rating (PER)",
    y = "Salary (USD)"
  ) +
  scale_y_continuous(labels = dollar_format(),
                     breaks = seq(0, 300000, by = 40000)) +
  scale_x_continuous(breaks = seq(0, max(eda_df$per), by = 5),
                     limits = c(0, max(eda_df$per) + 5)) +
  #coord_cartesian(clip = "off") +
  theme_classic(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold", size = 18),
    plot.subtitle = element_text(size = 12, margin = margin(b = 15)),
    axis.title = element_text(),
    plot.margin = margin(t = 15, r = 15, b = 15, l = 25),  # left margin increased
  )
```


# Methods

::: {.panel-tabset}
 
## Salary Model

To help quantify player value in the WNBA, we fit and trained an XGBoost model to predict player salaries based on performance and contract-related factors. The model used three key variables: a multi-year weighted PER (with recent seasons weighted more heavily), player age, and the player’s share of their current team’s salary cap. Our goal was to identify players who may be underpaid relative to their on-court contributions. We focused on positive residuals, cases where the model predicted a higher salary than the player currently earns, as a way to flag potential value picks for expansion.

To evaluate model performance, we used 5-fold cross-validation. The dataset was divided into five parts; each fold served once as a test set, while the remaining folds were used for training. We compared five models:

* Linear Regression

* Polynomial Regression, adding a squared term for age

* LASSO Regression, using L1 regularization to penalize complexity and perform feature selection

* Ridge Regression, using L2 regularization to shrink coefficients and reduce variance;

* XGBoost, a gradient boosting algorithm that builds an ensemble of shallow trees trained sequentially on residuals.

```{r}
#| echo: false
#| warning: false
library(ggtext)


cv_summary <- read_csv("cv_summary.csv")
cv_summary_stats <- read_csv("cv_summary_stats.csv")

# Order model factor levels by average RMSE
model_order <- cv_summary_stats |> arrange(avg_cv_rmse) |> pull(model)


cv_summary |>
  mutate(model = factor(model, levels = model_order)) |>
  ggplot(aes(x = model, y = rmse)) +
  geom_point(size = 4, alpha = 0.7, color = "steelblue") +
  stat_summary(fun = mean, geom = "point", color = "firebrick", size = 5, shape = 18) +
  stat_summary(fun.data = mean_se, geom = "errorbar", color = "firebrick", width = 0.2) +
  scale_x_discrete(labels = c(
    lm_pred = "**Linear Model**",
    poly_pred = "**Polynomial (Age²)**",
    lasso_pred = "**LASSO**",
    ridge_pred = "**Ridge**",
    xgb_pred = "**XGBoost**"
  )) +
  labs(
    title = "**Model Comparison: 5-Fold Cross-Validation RMSE**",
    x = "Model Type",
    y = "RMSE (Predicted Salary)"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    plot.title = element_markdown(hjust = 0.5, size = 16),
    axis.title.x = element_text(face = "bold"),
    axis.title.y = element_text(face = "bold"),
    axis.text.x = element_markdown()
  )
```

All models were evaluated using Root Mean Squared Error (RMSE). RMSE was summarized across folds using means, standard deviations, standard errors, and 95% confidence intervals; the XGBoost model was selected as the best performing model. Unlike a single large decision tree that may overfit, boosting improves performance incrementally by focusing each tree on correcting the errors of the current model. A learning rate controls how much each tree contributes, helping to balance flexibility and generalization. 

## Protection Predictions

To predict which players each WNBA team would protect in the expansion draft, we created a heuristic player ranking formula. It assigned a performance score to each player based on: Player Efficiency Rating (PER), Win Shares (WS), years remaining on their contract, and age.

* PER and WS were selected to represent on-court impact, individual efficiency and contribution to team success.

* Years remaining on contract, assuming teams are likely to retain players with long-term control.

* Age, assuming teams will prioritize younger players with growth potential.

Individually, PER and WS were aggregated from the 2023-2025 seasons using a weighted average. Weighted performance for 2023: 10%, 2024: 30% and 2025: 60%. Reasoning for the weights was the idea that teams consider multiple years of performance, but place more emphasis on recent seasons to better reflect a player’s current play and impact. Variables were standardized using scale() to account for differences in scale and magnitude.

Initial weights in the ranking formula were chosen based on domain knowledge:

* Weighted PER and Weighted WS were used to capture on-court performance

* Contract years to represent a team want to retain players under contract.

* Age penalty to players over 35 to reflect decreased likelihood of protection due to aging. 


The formula combined the weighted metrics to produce a performance score, and players were ranked within their team. The top five scored players were assumed to be protected. Explore our
[Shiny App](https://isabellaferrandiz.shinyapps.io/shiny-protection-app/){target="_blank"} to see all team breakdowns.

$\text{PER}(0.3) + \text{WS}(0.2) + \text{Contract Years}(0.1) + \text{Age penalty}(-0.3)$


**Evaluation of formula**

To evaluate the robustness of the heuristic formula, a series of model iterations called “runs” were implemented.  Each run applied a different combination of weights to metrics used in the protection formula.


For each run, the formula recalculates a score for every player and identifies the top five players on each team as “protected.” Dozens of runs were generated using different weight combinations, simulating a wide range of decision-making possibilities. This approach allowed observations of players who were consistently protected and which were more sensitive to weight changes. By tracking these protection decisions across runs, each player’s protection rate was calculated. It assessed the stability of the protection formula and identified swing players( those whose protection status changed frequently depending on weights).

:::

# Results

To determine the final expansion draft targets, we began with the full pool of unprotected players. Players were first categorized by position: centers, forwards, and guards. Once players were grouped by position, we ranked them in descending order based on their residuals from the salary prediction model. This highlighted players whose actual salaries were lower than their predicted value, showing undervalued talent.


The selection process prioritized players with the highest positive residuals within each position group, helping us identify the most undervalued prospects. This approach ensured our recommendations balanced positional needs while maximizing potential value across all key positions.


```{r}
#| echo: false
#| warning: false
# Define character vector of selected player names
top_overvalued_names <- c(
  "makayla timpson", "naz hillmon", "nyara sabally", 
  "sug sutton", "maya caldwell", "marquesha davis", "janelle salaun"
)

# Filter your data to include just those players
top_overvalued_players <- model_df_scaled |>
  filter(player %in% top_overvalued_names) |>
  mutate(
    nudge_x = case_when(
      player == "makayla timpson" ~ -50000,
      player == "naz hillmon"     ~  40000,
      player == "nyara sabally"   ~ 60000,
      player == "sug sutton"      ~ 0,
      player == "maya caldwell"   ~ -30000,
      player == "marquesha davis" ~ -50000,
      player == "janelle salaun"  ~ -50000,
      TRUE ~ 0
    ),
    nudge_y = case_when(
      player == "makayla timpson" ~ -8000,
      player == "naz hillmon"     ~ -10000,
      player == "nyara sabally"   ~ 0,
      player == "sug sutton"      ~ 40000,
      player == "maya caldwell"   ~ -20000,
      player == "marquesha davis" ~ 40000,
      player == "janelle salaun"  ~ 20000,
      TRUE ~ 0
    )
  )

ggplot(data = model_df_scaled, 
       aes(x = actual, y = xgb_pred, color = residual)) +
  geom_point(alpha = 0.7, size = 2) +
  geom_abline(slope = 1, intercept = 0, 
              linetype = "dashed", color = "grey80") +
  scale_x_continuous(labels = dollar_format(prefix = "$")) +
  scale_y_continuous(labels = dollar_format(prefix = "$")) +
  scale_color_gradient2(
    low = "firebrick", mid = "gray80", high = "forestgreen", midpoint = 0
  ) +
  labs(
    title = "Predicted vs. Actual WNBA 2025 Salaries",
    x = "Actual 2025 Salary",
    y = "Predicted 2025 Salary"
  ) +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    axis.title = element_text(),
    legend.title = element_text()
  ) +
  # Add connecting lines
  geom_segment(data = top_overvalued_players,
               aes(x = actual, y = xgb_pred, 
                   xend = actual + nudge_x, yend = xgb_pred + nudge_y), 
               color = "grey", size = 0.75) +
  # Add labels
  geom_label(data = top_overvalued_players,
             aes(x = actual + nudge_x, y = xgb_pred + nudge_y, label = str_to_title(player)),
             color = "black", size = 2.5, label.padding = unit(0.3, "lines"))
```

Our final results are a list of players we believe would be great prospects in the upcoming expansion draft due to their contact status, age, experience, and ability. 

```{r}
#| echo: false
#| warning: false

library(gt)

selected_players <- c(
  "sug sutton", "maya caldwell", "julie vanloo", "marquesha davis",
  "kayla mcbride", "nyara sabally", "olivia nelson-ododa", "li yueru",
  "makayla timpson", "naz hillmon", "janelle salaun"
)

age_lookup <- tibble(
  player = c(
    "sug sutton", "maya caldwell", "julie vanloo", "kayla mcbride",
    "naz hillmon", "li yueru", "marquesha davis", "makayla timpson",
    "janelle salaun", "nyara sabally", "olivia nelson-ododa"
  ),
  Age = c(26, 26, 32, 33, 25, 26, 24, 22, 23, 25, 24)
)
selected_players <- age_lookup$player

salary_table <- model_df_scaled |>
  filter(tolower(player) %in% selected_players) |>
  mutate(
    actual   = as.numeric(actual),
    xgb_pred = as.numeric(xgb_pred),
    residual = as.numeric(residual)
  ) |>
  left_join(age_lookup, by = "player") |>
  arrange(desc(residual)) |>
  mutate(
    Name = case_when(
      player == "kayla mcbride" ~ "Kayla McBride",
      TRUE ~ str_to_title(player)
    ),
    `Actual Salary`    = dollar(actual),
    `Predicted Salary` = dollar(xgb_pred),
    Residual           = dollar(residual)
  ) |>
  select(
    Name,
    Age,
    Position = pos,
    Team = team,
    `Actual Salary`,
    `Predicted Salary`,
    Residual
  ) |>
  gt() |>
  tab_header(
    title = md("**Top Expansion Draft Prospects**")
  ) |>
  tab_style(
    style = cell_text(weight = "bold", size = px(18)),
    locations = cells_title(groups = "title")
  ) |>
  cols_align(
    align = "left",
    columns = everything()
  ) |>
  tab_options(
    table.font.size = 14,
    heading.align = "center"
  )

salary_table
```


# Discussion

We faced several limitations in our research and data collection. Public information on player protection status from past WNBA expansion drafts is extremely limited, and frequent roster changes, due to injuries, overseas commitments, personal matters, and contract movement, made it challenging to maintain consistent and accurate data. Since the 2025 WNBA season is still ongoing, shifting lineups and salaries may further affect the reliability of our predictions.

Looking ahead, upcoming changes to the WNBA’s Collective Bargaining Agreement (CBA), expected to reset later this year, will likely significantly reshape league economics. Players are pushing for higher salaries, revenue sharing, expanded benefits, and a reduced draft age. These changes will likely influence salary distributions and roster-building strategies and evolving landscape in the WNBA presents opportunity. Future research could incorporate projected CBA changes and player availability to build more robust models, simulating how an expansion team might perform competitively and financially in seasons to come.

# Acknowledgments
 
Special thanks to James Hyman, Quang Nguyen, Dr. Ron Yurko and the CMSACamp TA’s for their feedback and guidance during the research process. 


